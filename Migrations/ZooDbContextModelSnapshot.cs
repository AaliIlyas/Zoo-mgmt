// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zoo;

namespace Zoo.Migrations
{
    [DbContext(typeof(ZooDbContext))]
    partial class ZooDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EnclosureDbModelZookeeperDbModel", b =>
                {
                    b.Property<int>("EnclosuresId")
                        .HasColumnType("int");

                    b.Property<int>("ZookeepersId")
                        .HasColumnType("int");

                    b.HasKey("EnclosuresId", "ZookeepersId");

                    b.HasIndex("ZookeepersId");

                    b.ToTable("EnclosureDbModelZookeeperDbModel");
                });

            modelBuilder.Entity("Zoo.Models.DbModels.AnimalDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfArrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EnclosureId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<int?>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<int?>("ZookeeperId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnclosureId");

                    b.HasIndex("SpeciesId");

                    b.HasIndex("ZookeeperId");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("Zoo.Models.DbModels.EnclosureDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Enclosure");
                });

            modelBuilder.Entity("Zoo.Models.DbModels.LocationDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Zoo.Models.DbModels.SpeciesDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Classification")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("Zoo.Models.DbModels.TransferDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfTransfer")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inbound")
                        .HasColumnType("bit");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("LocationId");

                    b.ToTable("Transfer");
                });

            modelBuilder.Entity("Zoo.Models.DbModels.ZookeeperDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zookeeper");
                });

            modelBuilder.Entity("EnclosureDbModelZookeeperDbModel", b =>
                {
                    b.HasOne("Zoo.Models.DbModels.EnclosureDbModel", null)
                        .WithMany()
                        .HasForeignKey("EnclosuresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zoo.Models.DbModels.ZookeeperDbModel", null)
                        .WithMany()
                        .HasForeignKey("ZookeepersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Zoo.Models.DbModels.AnimalDbModel", b =>
                {
                    b.HasOne("Zoo.Models.DbModels.EnclosureDbModel", "Enclosure")
                        .WithMany("Animals")
                        .HasForeignKey("EnclosureId");

                    b.HasOne("Zoo.Models.DbModels.SpeciesDbModel", "Species")
                        .WithMany()
                        .HasForeignKey("SpeciesId");

                    b.HasOne("Zoo.Models.DbModels.ZookeeperDbModel", "Zookeeper")
                        .WithMany("Animals")
                        .HasForeignKey("ZookeeperId");

                    b.Navigation("Enclosure");

                    b.Navigation("Species");

                    b.Navigation("Zookeeper");
                });

            modelBuilder.Entity("Zoo.Models.DbModels.TransferDbModel", b =>
                {
                    b.HasOne("Zoo.Models.DbModels.AnimalDbModel", "Animal")
                        .WithMany("Transfers")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Zoo.Models.DbModels.LocationDbModel", "Location")
                        .WithMany("Transfers")
                        .HasForeignKey("LocationId");

                    b.Navigation("Animal");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Zoo.Models.DbModels.AnimalDbModel", b =>
                {
                    b.Navigation("Transfers");
                });

            modelBuilder.Entity("Zoo.Models.DbModels.EnclosureDbModel", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Zoo.Models.DbModels.LocationDbModel", b =>
                {
                    b.Navigation("Transfers");
                });

            modelBuilder.Entity("Zoo.Models.DbModels.ZookeeperDbModel", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
